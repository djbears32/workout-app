// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using workout_app.DAL.Models;

namespace workout_app.Migrations
{
    [DbContext(typeof(WorkoutContext))]
    [Migration("20210915233228_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId", "WorkoutId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("ExerciseWorkout");
                });

            modelBuilder.Entity("workout_app.DAL.Models.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExerciseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MuscleGroupId")
                        .HasColumnType("int");

                    b.HasKey("ExerciseId");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("workout_app.DAL.Models.ExerciseWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Reps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("ExerciseWorkouts");
                });

            modelBuilder.Entity("workout_app.DAL.Models.MuscleGroup", b =>
                {
                    b.Property<int>("MuscleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MuscleGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MuscleGroupId");

                    b.ToTable("MuscleGroups");
                });

            modelBuilder.Entity("workout_app.DAL.Models.TrainingPlan", b =>
                {
                    b.Property<int>("TrainingPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingPlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutLength")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutsPerWeek")
                        .HasColumnType("int");

                    b.HasKey("TrainingPlanId");

                    b.HasIndex("WorkoutTypeId");

                    b.ToTable("TrainingPlans");
                });

            modelBuilder.Entity("workout_app.DAL.Models.Workout", b =>
                {
                    b.Property<int>("WorkoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.HasKey("WorkoutId");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("workout_app.DAL.Models.WorkoutType", b =>
                {
                    b.Property<int>("WorkoutTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkoutTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutTypeId");

                    b.ToTable("WorkoutTypes");
                });

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.HasOne("workout_app.DAL.Models.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workout_app.DAL.Models.Workout", null)
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("workout_app.DAL.Models.Exercise", b =>
                {
                    b.HasOne("workout_app.DAL.Models.MuscleGroup", "MuscleGroup")
                        .WithMany("Exercise")
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("workout_app.DAL.Models.ExerciseWorkout", b =>
                {
                    b.HasOne("workout_app.DAL.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workout_app.DAL.Models.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("workout_app.DAL.Models.TrainingPlan", b =>
                {
                    b.HasOne("workout_app.DAL.Models.WorkoutType", "WorkoutType")
                        .WithMany("TrainingPlan")
                        .HasForeignKey("WorkoutTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutType");
                });

            modelBuilder.Entity("workout_app.DAL.Models.Workout", b =>
                {
                    b.HasOne("workout_app.DAL.Models.TrainingPlan", "TrainingPlan")
                        .WithMany("Workout")
                        .HasForeignKey("TrainingPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("workout_app.DAL.Models.MuscleGroup", b =>
                {
                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("workout_app.DAL.Models.TrainingPlan", b =>
                {
                    b.Navigation("Workout");
                });

            modelBuilder.Entity("workout_app.DAL.Models.WorkoutType", b =>
                {
                    b.Navigation("TrainingPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
